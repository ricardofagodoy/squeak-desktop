/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package squeak.desktop;

import squeak.desktop.dao.*;
import squeak.desktop.model.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.ListSelectionModel;
import java.util.List;
import javax.swing.Timer;
import java.awt.event.*;
import java.util.Date;
import java.text.SimpleDateFormat;

/**
 *
 * @author ricardo
 */
public class MainFrame extends javax.swing.JFrame {

    private Usuario usuario;
    private StatusDAO statusDAO;
    
    private Timer timer;
    private static SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyy - hh:mm:ss");
    
    /**
     * Creates new form MainFrame
     */
    public MainFrame(Usuario u) {
        initComponents();
        
        this.setLocationRelativeTo(null);
        
        this.usuario = u;
        
       nomeLabel.setText(nomeLabel.getText() + u.getNome());
       
       carregaMensagens();
       carregaUsarios();
       
       horario.setText(sdf.format(new Date())); 
       timer = new Timer(1000, updateClockAction);
       timer.start();
       
       try {
        statusDAO = new StatusDAO(BDFactory.getInstance());
       } catch(Exception e) {
           System.out.println(e.getMessage());
       }
    }
    
    ActionListener updateClockAction = new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            horario.setText(sdf.format(new Date())); 
          }
      };
    
    private void carregaMensagens() {
        
        try {
            
            MensagemDAO mensagemDAO = new MensagemDAO(BDFactory.getInstance());
         
            List<Mensagem> msgs =  mensagemDAO.buscaMensagens();
            
            if(msgs != null) {

                String[] colunas = {"Id", "Horário","Texto","Autor"};
                String[][] dados = new String [0][4];

                DefaultTableModel modelo = new DefaultTableModel(dados, colunas);  
                tbMensagens.setModel(modelo);
                
                for(Mensagem m : msgs)
                  modelo.addRow( new String [] {String.valueOf(m.getId()),
                                                m.getData().toString(),
                                                m.getTexto(),
                                                m.getUsuario().getNome()
                  });
                
                for (int c = 0; c < tbMensagens.getColumnCount(); c++) {
                    Class<?> col_class = tbMensagens.getColumnClass(c);
                    tbMensagens.setDefaultEditor(col_class, null);
                }

              }
        } catch(Exception e) {        
        }
    }
    
    private void carregaUsarios() {
        
        try {
            
            UsuarioDAO usuarioDAO = new UsuarioDAO(BDFactory.getInstance());
         
            List<Usuario> users =  usuarioDAO.buscaTodos();
                    
            if(users != null) {

                String[] colunas = {"Id", "Nome","Email","Sexo", "Tipo"};
                String[][] dados = new String [0][5];

                DefaultTableModel modelo = new DefaultTableModel(dados, colunas);  
                tbUsuarios.setModel(modelo);
                
                for(Usuario u : users)
                  modelo.addRow( new String [] {String.valueOf(u.getId()),
                                                u.getNome(),
                                                u.getEmail(),
                                                String.valueOf(u.getSexo()),
                                                u.getStatus().getTipo()
                  });
                
                for (int c = 0; c < tbUsuarios.getColumnCount(); c++) {
                    Class<?> col_class = tbUsuarios.getColumnClass(c);
                    tbUsuarios.setDefaultEditor(col_class, null);
                }

              }
        } catch(Exception e) {         
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelB = new javax.swing.JPanel();
        bemvindo = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        nomeLabel = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbMensagens = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbUsuarios = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        horario = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Squeak Administeador - Logado");
        setResizable(false);

        bemvindo.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        bemvindo.setText("Bem-vindo ao Squeak Admin");

        jButton1.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jButton1.setText("Deslogar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        nomeLabel.setFont(new java.awt.Font("Ubuntu", 2, 24)); // NOI18N
        nomeLabel.setText("Nome: ");

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        tbMensagens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbMensagens);

        jButton2.setText("Excluir selecionados");
        jButton2.setMaximumSize(new java.awt.Dimension(137, 29));
        jButton2.setMinimumSize(new java.awt.Dimension(137, 29));
        jButton2.setPreferredSize(new java.awt.Dimension(137, 29));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(53, 53, 53))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        jTabbedPane1.addTab("Mensagens", jPanel1);

        tbUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tbUsuarios);

        jButton3.setText("Desbloquear usuários");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Bloquear usuários");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 15, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Usuarios", jPanel2);

        horario.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N

        jButton5.setText("Atualizar dados");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelBLayout = new javax.swing.GroupLayout(PanelB);
        PanelB.setLayout(PanelBLayout);
        PanelBLayout.setHorizontalGroup(
            PanelBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBLayout.createSequentialGroup()
                .addGroup(PanelBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelBLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(PanelBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelBLayout.createSequentialGroup()
                                .addComponent(nomeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(horario))
                            .addGroup(PanelBLayout.createSequentialGroup()
                                .addComponent(bemvindo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelBLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 721, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        PanelBLayout.setVerticalGroup(
            PanelBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bemvindo, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelBLayout.createSequentialGroup()
                        .addComponent(nomeLabel)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelBLayout.createSequentialGroup()
                        .addComponent(horario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Mensagens");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PanelB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PanelB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
        new LoginFrame().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        int[] selectedRows = tbMensagens.getSelectedRows();
        int quantas = selectedRows.length;
        
        DefaultTableModel model = ((DefaultTableModel)tbMensagens.getModel());
        
        if(quantas > 0) {
            try {
                MensagemDAO mensagemDAO = new MensagemDAO(BDFactory.getInstance());

                for(int i = 0; i < selectedRows.length; i++) {

                    Integer id = Integer.parseInt((String)model.getValueAt(selectedRows[i]-i, 0));
                    mensagemDAO.deletarMensagem(id);

                    model.removeRow(selectedRows[i]-i);
                }     

                tbMensagens.clearSelection();

                JOptionPane.showMessageDialog(null, quantas + (quantas > 1 ? " mensagens excluidas" : " mensagem excluida") + " com sucesso!"); 

            } catch(Exception e) {
                JOptionPane.showMessageDialog(null, "Erro: " + e);
            }     
        } else {
            JOptionPane.showMessageDialog(null, "Selecione algum registro!");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void alteraStatusUsuario(int status) {
        int[] selectedRows = tbUsuarios.getSelectedRows();
        int quantas = selectedRows.length;
        
        DefaultTableModel model = ((DefaultTableModel)tbUsuarios.getModel());
        
        if(quantas > 0) {
            try {
                UsuarioDAO usuarioDAO = new UsuarioDAO(BDFactory.getInstance());

                for(int i = 0; i < selectedRows.length; i++) {

                    Integer id = Integer.parseInt((String)model.getValueAt(selectedRows[i], 0));
                    Usuario u = usuarioDAO.procuraUsuario(id);
                    
                    // Se nao é administrador
                    if(u.getStatus().getId() != 3) {
                        usuarioDAO.alteraStatus(id, status);
                        model.setValueAt(statusDAO.buscaStatus(status), selectedRows[i], 4);
      
                        JOptionPane.showMessageDialog(null, quantas + (quantas > 1 ? " usuarios alterados" : " usuario alterado") + " com sucesso!"); 
                    } else {
                         JOptionPane.showMessageDialog(null, "Você não pode alterar um administrador!");
                    }
                }     

                tbUsuarios.clearSelection();

            } catch(Exception e) {
                JOptionPane.showMessageDialog(null, "Erro: " + e);
            }     
        } else {
            JOptionPane.showMessageDialog(null, "Selecione algum registro!");
        }
    }
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        alteraStatusUsuario(2);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        alteraStatusUsuario(1);       
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        if(jTabbedPane1.getSelectedIndex() == 0)
           tbMensagens.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION); 
        else
           tbUsuarios.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);  
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        carregaMensagens();
        carregaUsarios();
    }//GEN-LAST:event_jButton5ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelB;
    private javax.swing.JLabel bemvindo;
    private javax.swing.JLabel horario;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel nomeLabel;
    private javax.swing.JTable tbMensagens;
    private javax.swing.JTable tbUsuarios;
    // End of variables declaration//GEN-END:variables
}
